apiVersion: harness.io/v1
kind: Workflow
name: AWS Service Provisioning
identifier: awsserviceprovisioningworkflow
type: service
owner: user:account/aditya.kashyap@harness.io
metadata:
  description: Provision AWS services based on user group permissions with IaC and IDP catalog entry
  tags:
    - aws
    - provisioning
    - iac
    - idp
    - cloud
spec:
  output:
    status: PROVISIONED
    requestId: aws-provision-{{ parameters.selectedUserGroup }}-{{ now() | date('YYYYMMdd-HHmmss') }}
    userEmail: ${{ parameters.currentUserEmail }}
    userName: ${{ parameters.currentUserName }}
    userGroup: ${{ parameters.selectedUserGroup }}
    selectedServices: ${{ parameters.selectedAWSServices }}
    serviceConfigurations: ${{ parameters.serviceConfigurations }}
    iacmWorkspaceName: ${{ parameters.projectName }}-{{ parameters.selectedUserGroup }}-{{ now() | date('YYYYMMdd-HHmmss') }}
    idpEntityName: ${{ parameters.projectName }}
    pipelineTriggerUrl: https://app.harness.io/ng/account/<ACCOUNT_ID>/cd/orgs/<ORG_ID>/projects/<PROJECT_ID>/pipelines/aws-service-provisioning-pipeline/executions
  parameters:
    - title: Project Information
      required:
        - projectName
      properties:
        projectName:
          title: Project Name
          type: string
          description: Name for your AWS service project
          pattern: ^[a-z][a-z0-9-]*[a-z0-9]$
          ui:autofocus: true
          ui:help: Must start with a letter, contain only lowercase letters, numbers, and hyphens
    - title: User Group Selection
      required:
        - selectedUserGroup
      properties:
        selectedUserGroup:
          title: Select Your User Group
          type: string
          description: Choose from your assigned user groups to see available AWS services
          ui:field: SelectFieldFromApi
          ui:options:
            title: User groups
            path: proxy/harness-user-groups
            arraySelector: data.content
            valueSelector: identifier
            labelSelector: name
    - title: AWS Service Selection
      required:
        - selectedAWSServices
      properties:
        selectedAWSServices:
          title: Select AWS Service
          type: string
          description: Choose the AWS service you need for your project
          enum:
            - ec2
            - s3
            - rds
          enumNames:
            - EC2 (Elastic Compute Cloud)
            - S3 (Simple Storage Service)
            - RDS (Relational Database Service)
          ui:widget: select
          ui:field: ClearOnChangeField
      ui:options:
        clearFieldsOnChange:
          - instanceType
          - instanceCount
          - keyPairName
          - bucketName
          - versioning
          - encryption
          - engine
          - instanceClass
          - allocatedStorage
    - allOf:
        - if:
            properties:
              selectedAWSServices:
                const: ec2
          then:
            title: EC2 Configuration
            properties:
              instanceType:
                title: Instance Type
                type: string
                enum:
                  - t2.micro
                  - t2.small
                  - t2.medium
                  - t3.micro
                  - t3.small
                  - t3.medium
                default: t2.micro
              instanceCount:
                title: Number of Instances
                type: integer
                minimum: 1
                maximum: 10
                default: 1
              keyPairName:
                title: Key Pair Name
                type: string
                description: EC2 Key Pair for SSH access
            required:
              - instanceType
              - instanceCount
        - if:
            properties:
              selectedAWSServices:
                const: s3
          then:
            title: S3 Configuration
            properties:
              bucketName:
                title: S3 Bucket Name
                type: string
                pattern: ^[a-z0-9][a-z0-9-]*[a-z0-9]$
                description: Must be globally unique, lowercase letters, numbers, and hyphens only
              versioning:
                title: Enable Versioning
                type: boolean
                default: true
              encryption:
                title: Enable Encryption
                type: boolean
                default: true
            required:
              - bucketName
        - if:
            properties:
              selectedAWSServices:
                const: rds
          then:
            title: RDS Configuration
            properties:
              engine:
                title: Database Engine
                type: string
                enum:
                  - mysql
                  - postgres
                  - mariadb
                default: mysql
              instanceClass:
                title: Instance Class
                type: string
                enum:
                  - db.t3.micro
                  - db.t3.small
                  - db.t3.medium
                default: db.t3.micro
              allocatedStorage:
                title: Allocated Storage (GB)
                type: integer
                minimum: 20
                maximum: 100
                default: 20
            required:
              - engine
              - instanceClass
              - allocatedStorage
  steps:
    - id: debug-parameters
      name: Debug Input Parameters
      action: debug:log
      input:
        message: |
          === AWS Service Provisioning Workflow Started ===
          Project Name: {{ parameters.projectName }}
          User: {{ parameters.currentUserEmail }} ({{ parameters.currentUserName }})
          User Group: {{ parameters.selectedUserGroup }}
          Selected Services: {{ parameters.selectedAWSServices }}
          Service Configurations: {{ parameters.serviceConfigurations }}
    - id: trigger-pipeline
      name: Trigger AWS Service Provisioning Pipeline
      action: trigger:harness-custom-pipeline
      input:
        pipelineId: aws-service-provisioning-pipeline
        inputset:
          projectName: ${{ parameters.projectName }}
          projectDescription: ${{ parameters.projectDescription }}
          userEmail: ${{ parameters.currentUserEmail }}
          userName: ${{ parameters.currentUserName }}
          userGroup: ${{ parameters.selectedUserGroup }}
          selectedServices: ${{ parameters.selectedAWSServices }}
          serviceConfigurations: ${{ parameters.serviceConfigurations }}
    - id: log-completion
      name: Log Workflow Completion
      action: debug:log
      input:
        message: |-
          === AWS Service Provisioning Workflow Completed ===
          Pipeline triggered successfully for project: {{ parameters.projectName }}
          Check pipeline execution at: https://app.harness.io/ng/account/<ACCOUNT_ID>/cd/orgs/<ORG_ID>/projects/<PROJECT_ID>/pipelines/aws-service-provisioning-pipeline/executions
